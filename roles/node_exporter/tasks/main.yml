---
- name: Create node exporter user
  ansible.builtin.user:
    name: "{{ node_exporter_user }}"
    system: yes
    shell: /bin/false
    home: "{{ node_exporter_install_dir }}"
    create_home: no

- name: Create node exporter directory
  ansible.builtin.file:
    path: "{{ node_exporter_install_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"

- name: Download Node Exporter
  ansible.builtin.get_url:
    url: "{{ node_exporter_release_url }}"
    dest: "{{ node_exporter_tmp_dir }}/{{ node_exporter_archive }}"
    mode: '0644'
    timeout: 60

- name: Extract Node Exporter
  ansible.builtin.unarchive:
    src: "{{ node_exporter_tmp_dir }}/{{ node_exporter_archive }}"
    dest: "{{ node_exporter_tmp_dir }}"
    remote_src: yes
    creates: "{{ node_exporter_extract_dir }}/node_exporter"

- name: Copy Node Exporter binary
  ansible.builtin.copy:
    src: "{{ node_exporter_extract_dir }}/node_exporter"
    dest: "{{ node_exporter_install_dir }}/node_exporter"
    mode: '0755'
    owner: "{{ node_exporter_user }}"
    group: "{{ node_exporter_group }}"
    remote_src: yes

- name: Create systemd service file
  ansible.builtin.template:
    src: node-exporter.service.j2
    dest: "/etc/systemd/system/{{ node_exporter_service_name }}.service"
    mode: '0644'
  notify: restart node-exporter

- name: Enable and start Node Exporter
  ansible.builtin.systemd:
    name: "{{ node_exporter_service_name }}"
    enabled: yes
    state: started
    daemon_reload: yes

- name: Clean up temporary files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ node_exporter_tmp_dir }}/{{ node_exporter_archive }}"
    - "{{ node_exporter_extract_dir }}"
