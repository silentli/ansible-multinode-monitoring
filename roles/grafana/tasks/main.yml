---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install required packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - software-properties-common
      - wget
    state: present

- name: Add Grafana GPG key
  ansible.builtin.apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add Grafana repository
  ansible.builtin.apt_repository:
    repo: "deb https://packages.grafana.com/oss/deb stable main"
    state: present
    filename: grafana

- name: Install Grafana
  ansible.builtin.apt:
    name: grafana
    state: present
    update_cache: yes

- name: Start and enable Grafana
  ansible.builtin.systemd:
    name: "{{ grafana_service_name }}"
    state: started
    enabled: yes

- name: Wait for Grafana to be ready
  ansible.builtin.wait_for:
    host: "{{ grafana_bind_address }}"
    port: "{{ grafana_port }}"
    delay: 10
    timeout: 60

- name: Configure Grafana data source (Prometheus)
  ansible.builtin.uri:
    url: "http://{{ grafana_bind_address }}:{{ grafana_port }}/api/datasources"
    method: POST
    headers:
      Content-Type: "application/json"
    body: |
      {
        "name": "Prometheus",
        "type": "prometheus",
        "url": "{{ grafana_prometheus_url }}",
        "access": "proxy",
        "isDefault": true
      }
    status_code: [200, 409]  # 409 means datasource already exists
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
  retries: 5
  delay: 10
  register: grafana_datasource
  until: grafana_datasource.status == 200 or grafana_datasource.status == 409

- name: Import default dashboard
  ansible.builtin.uri:
    url: "http://{{ grafana_bind_address }}:{{ grafana_port }}/api/dashboards/db"
    method: POST
    headers:
      Content-Type: "application/json"
    body: "{{ lookup('template', 'grafana_dashboard.json.j2') }}"
    status_code: [200, 409]  # 409 means dashboard already exists
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
  retries: 3
  delay: 10
  register: grafana_dashboard
  until: grafana_dashboard.status == 200 or grafana_dashboard.status == 409
  ignore_errors: yes
