---
- name: Validate required passwords are set
  ansible.builtin.fail:
    msg: |
      Password validation failed:
      - mariadb_root_password is not defined or empty
      
      This password MUST be overridden in group_vars, host_vars, or vault files.
  when: 
    - (mariadb_root_password is not defined) or
      (mariadb_root_password | length == 0)
  tags: [mariadb, validation, always]

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  tags: [mariadb, install, always]

- name: Install MariaDB server and client
  ansible.builtin.apt:
    name:
      - mariadb-server
      - mariadb-client
      - python3-mysqldb
    state: present
  tags: [mariadb, install]

- name: Start and enable MariaDB service
  ansible.builtin.systemd:
    name: "{{ mariadb_service_name }}"
    state: started
    enabled: yes
  tags: [mariadb, service]

- name: Configure MariaDB to listen on all interfaces
  ansible.builtin.template:
    src: 50-server.cnf.j2
    dest: "{{ mariadb_config_dir }}/50-server.cnf"
    mode: '0644'
  notify: restart mariadb
  tags: [mariadb, config]

- name: Set MariaDB root password
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ mariadb_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present
  tags: [mariadb, setup]

- name: Create monitoring database (if enabled)
  community.mysql.mysql_db:
    name: "{{ mariadb_monitoring_database }}"
    state: present
    login_user: root
    login_password: "{{ mariadb_root_password }}"
  when: mariadb_create_monitoring_db | default(true)
  tags: [mariadb, setup]

- name: Create monitoring user (if enabled)
  community.mysql.mysql_user:
    name: "{{ mariadb_monitoring_user }}"
    host: '%'
    password: "{{ mariadb_monitoring_password | default(mariadb_root_password) }}"
    priv: "{{ mariadb_monitoring_database }}.*:ALL"
    login_user: root
    login_password: "{{ mariadb_root_password }}"
    state: present
  when: mariadb_create_monitoring_user | default(true)
  tags: [mariadb, setup]

- name: Create sample table
  ansible.builtin.shell: |
    mysql -u root -p{{ mariadb_root_password }} -D {{ mariadb_monitoring_database }} <<-EOF
    CREATE TABLE IF NOT EXISTS system_metrics (
      id INT AUTO_INCREMENT PRIMARY KEY,
      metric_name VARCHAR(100) NOT NULL,
      metric_value FLOAT NOT NULL,
      timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    EOF
  tags: [mariadb, setup, sample-data]
